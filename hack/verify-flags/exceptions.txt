custom-metrics-stackdriver-adapter/README.md:               "namespace_id":   <your namespace>,
custom-metrics-stackdriver-adapter/README.md:               "pod_id":         <your pod ID>,
custom-metrics-stackdriver-adapter/README.md:               // namespace_id and instance_id labels don't matter for the custom
custom-metrics-stackdriver-adapter/README.md:           - my-app --pod_id=$(POD_ID)
custom-metrics-stackdriver-adapter/README.md:       podIdFlag := flag.String("pod_id", "", "a string")
custom-metrics-stackdriver-adapter/README.md:     - `pod_id` - set this to pod UID obtained via downward API. Example configuration that passes POD_ID to your application as a flag:
custom-metrics-stackdriver-adapter/examples/direct-to-sd/sd_dummy_exporter.go:		"namespace_id": "default",
custom-metrics-stackdriver-adapter/examples/direct-to-sd/sd_dummy_exporter.go:		"pod_id":         podId,
custom-metrics-stackdriver-adapter/examples/direct-to-sd/sd_dummy_exporter.go:		"pod_name":       name,
custom-metrics-stackdriver-adapter/examples/direct-to-sd/sd_dummy_exporter.go:		// namespace_id and instance_id don't matter
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator.go:			return timeSeries.Resource.Labels["namespace_name"] + ":" + timeSeries.Resource.Labels["pod_name"], nil
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator.go:		return fmt.Sprintf("resource.labels.namespace_name = %q AND resource.labels.pod_name = %s", namespace, podNames[0])
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator.go:		return fmt.Sprintf("resource.labels.pod_id = %s", podIDs[0])
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator.go:		return timeSeries.Resource.Labels["pod_id"], nil
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator.go:	return "resource.labels.pod_id != \"\" AND resource.labels.pod_id != \"machine\""
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator.go:	return fmt.Sprintf("resource.labels.namespace_name = %q AND resource.labels.pod_name = one_of(%s)", namespace, strings.Join(podNames, ","))
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator.go:	return fmt.Sprintf("resource.labels.pod_id = one_of(%s)", strings.Join(podIDs, ","))
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator_test.go:				"resource.labels.pod_id": "my-pod-id",
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator_test.go:			"AND resource.labels : pod_name " +
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator_test.go:			"AND resource.labels.container_name = \"\" AND resource.labels.pod_id != \"\" " +
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator_test.go:			"AND resource.labels.pod_id != \"machine\"")
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator_test.go:			"AND resource.labels.pod_id = one_of(\"my-pod-id-1\",\"my-pod-id-2\")").
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator_test.go:			"AND resource.labels.pod_name = \"my-pod-name\" " +
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator_test.go:			"AND resource.labels.pod_name = one_of(\"my-pod-name-1\",\"my-pod-name-2\") " +
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator_test.go:			Resource:   &sd.MonitoredResource{Type: "gke_container", Labels: map[string]string{"pod_id": "my-pod-id"}},
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator_test.go:			Resource:   &sd.MonitoredResource{Type: "gke_container", Labels: map[string]string{"pod_id": "my-pod-id"}},
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator_test.go:			Resource:   &sd.MonitoredResource{Type: "gke_container", Labels: map[string]string{"pod_id": "my-pod-id"}},
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator_test.go:	req2, _ := labels.NewRequirement("resource.labels.pod_name", selection.Exists, []string{})
custom-metrics-stackdriver-adapter/pkg/adapter/provider/translator_test.go:	req3, _ := labels.NewRequirement("resource.labels.pod_name", selection.Exists, []string{})
kubelet-to-gcm/monitor/controller/translator.go:		"namespace_id":   "",
kubelet-to-gcm/monitor/controller/translator.go:		"pod_id":         "machine",
kubelet-to-gcm/monitor/kubelet/translate.go:				"namespace_id":   namespace,
kubelet-to-gcm/monitor/kubelet/translate.go:				"pod_id":         podID,
kubelet-to-gcm/monitor/kubelet/translate.go:		"namespace_id":   "",
kubelet-to-gcm/monitor/kubelet/translate.go:		"pod_id":         "machine",
prometheus-to-sd/README.md:the prometheus-to-sd. Values of the `namespace_id` and `pod_id` can be passed to
prometheus-to-sd/translator/metrics.go:		[]string{"component_name", "metric_name"},
prometheus-to-sd/translator/translator.go:		"namespace_id":   config.PodConfig.NamespaceId,
prometheus-to-sd/translator/translator.go:		"pod_id":         config.PodConfig.PodId,
